# ----------------------------------------------------------------------------
# Class configuration file 
# ----------------------------------------------------------------------------
#
#  THIS FILE SHOULD ONLY BE USED TO SET SIMPLE CONFIGURATION VALUES. NOT AS A  
#          REPLACEMENT FOR SETTING VARIABLES PROPERLY WITHIN A CLASS!! 
#
# This file is used to set the "self" variables within a 
# confighandler.ConfigHandler object. These are accessed via:
#
#  <some_python_class>
#  def __init__(self):
#      self.config = ConfigHandler(config_file = "/dir/dir/file.conf")
# 
#  if self.config.option == value:
#      print "This is where ", value, " is stored."
#   
# SECTIONS:
#  Each [SECTION] defines a specific set of option-value pairs. The SECTION
# name is userspace and arbitrary. 
#
# OPTIONS:
#  option=value
#   Each option within a section will create a variable BY THE SAME NAME AS 
#   THE OPTION in the instantiated cONFIGhANDLER OBJECT with its value set 
#   to "value"
#
#   Caveats:
#     - Spaces after the "=" are ignored.
#     - ALL VALUES ARE A STRING...so they MAY have to be converted for use. The
#       ConfigHandler attempts to convert floats, integers and boolean - but be 
#       prepared to check for this. 
#     - Numbers will be returned as floats or int...never bools. 
#     - Quotes around values will be returned as part of the string. 
#
# I.e.
#  "name=Hydrogen" creates a variable called "name" in the ConfigHandler object 
#  with the value of "Hydrogen". I.e. self.config.name = str("Hydrogen"). 
#  
# Creating a new optionname=somevalue will create a new variable in the 
# object. The class does not need to be edited. 
# 
# FORMAT:
#  [section_name]
#  option=value
#
#  Lines starting with "#" are ignored. 
#  Lines with "#" AFTER DATA ARE *NOT* IGNORED. 
#   I.e. name=Hydrogen # This comment will be included in the value for 'name'
#  Do NOT use quotes for text values. 
# ----------------------------------------------------------------------------

###############################################################################
[LOGGING]
logfile             = ../log/MRATrefactor.log
app_name            = MRATrefactor 
log_level           = 10 
screendump          = True
create_paths        = True 
###############################################################################

[CORE]
# Eventually rejigger ConfigHandler to assemble the paths automagically, 
# For now just use full paths in all
root_dir            = /opt/MRAT_Refactor/
conf_dir            = /opt/MRAT_Refactor/etc/
etc_dir             = /opt/MRAT_Refactor/etc/
log_dir             = /opt/MRAT_Refactor/log/
bin_dir             = /opt/MRAT_Refactor/bin/
lib_dir             = /opt/MRAT_Refactor/lib/
share_dir           = /opt/MRAT_Refactor/share/
Rwd                 = /opt/MRAT_Refactor/Rwd/

[RHANDLER SERVICE]
# rhandler_service sets the provider of the remote [R] environment
# rhandler_service     = rserve
rhandler_service     = rserve

# rhandler_host sets the FQDN or IP address of the remote [R] environment
rhandler_host        = localhost 

# rhandler_port sets the port for communicating with the remote [R] environment
rhandler_port        = 6311

# These are specific to the rserve services
# rhandler_atomicArray = True 
# rhandler_arrayOrder  = C 
# rhandler_defaultVoid = False 
# rhandler_oobCallback = None
rhandler_atomicArray = True 
rhandler_arrayOrder  = C 
rhandler_defaultVoid = False 
rhandler_oobCallback = None
#rhandler_PEM  = "/Users/mikes/Documents/Work/BioComSoftware/Jobs/2014-10-10-Tesera/Tesera.pem"
rhandler_PEM = /SAM/WORK\ FOLDER/PROJECTS/IBC/mrat-refactor.pem

[DEFAULT R SCRIPT SERVER]
# The [R] script server, if different from the [R] environment service server
# holds the repository of differenr [R] scripts which can be called
# ssh is currently used to load the script, but may be changed. 
# script_server_host        = <IP address or FQDN> 
script_server_host        = localhost 

# script_server_port        = 22 <uses ssh for now>
script_server_port        = 22

# script_server_user        = ec2-user
script_server_user        = ec2-user

# The PEM file should be kept on the same system as the .conf file and should be 
# in a HIGHKY SECURED location. Never put the PEM file in publicly accessible 
# locations such as www, http, the or the software's subdirectories.
# script_server_pem = /opt/secure_directory/accesskey.pem
#script_server_pem = /Users/mikes/Documents/Work/BioComSoftware/Jobs/2014-10-10-Tesera/Tesera.pem
script_server_pem = /SAM/WORK\ FOLDER/PROJECTS/IBC/mrat-refactor.pem
